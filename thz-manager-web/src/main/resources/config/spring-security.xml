<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd">

    <!--不拦截的页面,可以设置一些静态资源-->
    <sec:http pattern="/login" security="none"></sec:http>

    <!--拦截/admin下的所有请求，限制具有admin权限的用户才能访问-->
    <sec:http auto-config="true">
        <sec:intercept-url pattern="/**" access="hasRole('ROLE_USER')" /> <!--访问任何页面都跳转登录界面-->
        <!-- 点击注销跳转的页面,与 <a href="<c:url value="/logout" />">注销</a> 配合使用-->
        <sec:logout logout-url="/logout" logout-success-url="/login.jsp" invalidate-session="true" />
    </sec:http>

    <!-- 安全认证管理，基于用户库-->
    <!--<sec:authentication-manager>
        <sec:authentication-provider>
            <sec:user-service>
                &lt;!&ndash;设置用户库中的用户；用此用户登录才能成功&ndash;&gt;
                <sec:user name="admin" password="123456" authorities="ROLE_USER"/>
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>-->

    <!-- 安全认证管理，基于数据库-->
    <bean name="bcryptEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    <sec:authentication-manager erase-credentials="false">
        <sec:authentication-provider user-service-ref="userDetailsService"> <!--自定义userService配置数据库-->
            <!--加密策略-->
            <sec:password-encoder ref="bcryptEncoder" />
        </sec:authentication-provider>
    </sec:authentication-manager>

</beans>